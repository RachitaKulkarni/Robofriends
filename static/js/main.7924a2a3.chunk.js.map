{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Components/ErrorBoundary.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","ID","Name","Email","className","src","alt","CardList","robots","map","user","i","id","name","email","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onsearchchange","event","target","value","fetch","then","response","json","users","filteredRobots","filter","robot","index","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iPAgBeA,EAdF,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,GAAGC,EAAgB,EAAhBA,KAAKC,EAAW,EAAXA,MAEnB,OACI,sBAAKC,UAAU,sDAAf,UAEI,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,WAEzD,gCACK,6BAAKJ,IACL,4BAAIC,WCkBNI,EAzBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,OACf,OACI,8BAEQA,EAAOC,KAAK,SAACC,EAAKC,GACd,OAAO,cAAC,EAAD,CAAcV,GAAIO,EAAOG,GAAGC,GAAKV,KAAMM,EAAOG,GAAGE,KAAOV,MAAOK,EAAOG,GAAGG,OAA9DH,SCKvBI,EAZG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC5B,OACI,qBAAKb,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVc,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCAXI,G,MAPD,SAACC,GACX,OACI,qBAAKC,MAAO,CAACC,SAAS,SAAUC,OAAO,kBAAqBC,OAAO,SAAnE,SACKJ,EAAMK,aCgBJC,E,kDAlBX,WAAYN,GAAO,IAAD,8BACd,cAAMA,IACDO,MAAM,CACPC,UAAS,GAHC,E,qDAOlB,SAAkBC,EAAMC,GACpBC,KAAKC,SAAS,CAACJ,UAAS,M,oBAE5B,WACI,OAAGG,KAAKJ,MAAMC,SACH,4DAEJG,KAAKX,MAAMK,a,GAfEQ,aCqEbC,E,kDA9DX,aAAc,IAAD,8BACT,gBAkBJC,eAAe,SAACC,GAEZ,EAAKJ,SAAS,CAAClB,YAAcsB,EAAMC,OAAOC,SAnB1C,EAAKX,MAAQ,CACTrB,OAAS,GACTQ,YAAc,IAJT,E,qDAQb,WAAqB,IAAD,OAEhByB,MAAM,8CACLC,MAAK,SAAAC,GACF,OAAOA,EAASC,UAEnBF,MAAK,SAAAG,GACF,EAAKX,SAAS,CAAC1B,OAAQqC,S,oBAa/B,WAAU,IAAD,OAECC,EAAgBb,KAAKJ,MAAMrB,OAAOuC,QAAO,SAACC,EAAMC,GAClD,OAAOD,EAAMnC,KAAKqC,cAAcC,SAAS,EAAKtB,MAAMb,YAAYkC,kBAEpE,OAA+B,IAA3BjB,KAAKJ,MAAMrB,OAAO4C,OAEX,yCAGF,sBAAKhD,UAAU,KAAf,UACG,6CACA,cAAC,EAAD,CAAWa,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACA,cAAC,EAAD,CAAU7B,OAAQsC,e,GA5CxBX,aCIHkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCGdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.7924a2a3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ID,Name,Email}) => {\r\n    //const{ID,Name,Email}=props;\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            {/* <img src={`https://robohash.org/${ID}?set=set1&size=200x200`} alt=\"Robots\"/> */}\r\n            <img src={`https://robohash.org/${ID}?size=200x200`} alt=\"Robots\"/>\r\n\r\n            <div>\r\n                 <h2>{Name}</h2>\r\n                 <p>{Email}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nexport default Card;","import React from 'react';\r\n// import {robots} from './robots';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({robots}) =>{\r\n    return(\r\n        <div>\r\n            {\r\n                robots.map( (user,i)=>{\r\n                    return <Card key={i} ID={robots[i].id}  Name={robots[i].name}  Email={robots[i].email}/>\r\n                })\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n// const CardList = ({robots}) =>{\r\n//     const cardArray = robots.map( (user,i)=>{\r\n//             return <Card key={i} ID={robots[i].id}  Name={robots[i].name}  Email={robots[i].email}/>\r\n//         }    \r\n//     );\r\n\r\n//     return(\r\n//         <div>\r\n//             {cardArray};\r\n//         </div>\r\n//     );\r\n// }\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchfield,searchChange}) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type='search' \r\n                placeholder='search robots' \r\n                onChange={searchChange}\r\n            />\r\n        </div>\r\n    );\r\n}\r\nexport default SearchBox;","import React from  'react';\r\n\r\nconst Scroll =(props)=>{\r\n    return (\r\n        <div style={{overflow:'scroll', border:'5px solid black',   height:'500px'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\nexport default Scroll;","import React,{Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            hasError:false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error,info){\r\n        this.setState({hasError:true});\r\n    }\r\n    render(){\r\n        if(this.state.hasError){\r\n            return <h1>Oops. There is some error.</h1>\r\n        }\r\n        return this.props.children;\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component} from 'react';\r\nimport CardList from '../Components/CardList';\r\n// import {robots} from './robots';\r\nimport SearchBox from '../Components/SearchBox';\r\nimport './App.css';\r\nimport Scroll from '../Components/Scroll';\r\nimport ErrorBoundary from '../Components/ErrorBoundary';\r\n\r\nclass App extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n            robots : [],\r\n            searchfield : '',\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        // console.log('check');\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response=>{\r\n            return response.json();\r\n        })   \r\n        .then(users=>{\r\n            this.setState({robots: users});\r\n        })\r\n    }\r\n\r\n    onsearchchange=(event)=>{\r\n        // console.log(event.target.value);\r\n        this.setState({searchfield : event.target.value});\r\n        // const filteredRobots= this.state.robots.filter((robot,index) => {\r\n        //     return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n        //  }\r\n        // )\r\n        // console.log(filteredRobots);\r\n    }\r\n    render() {\r\n        //const{robots,searchfield}=this.state; //destructure it\r\n        const filteredRobots= this.state.robots.filter((robot,index) => {\r\n            return robot.name.toLowerCase().includes(this.state.searchfield.toLowerCase());\r\n         })\r\n        if (this.state.robots.length===0) //or if(!robots.length) & use ternary operator for if-else\r\n        {\r\n            return <h1>LOADING</h1>\r\n        }else{\r\n        return (\r\n                 <div className='tc'>\r\n                    <h1>ROBOFRIENDS</h1>\r\n                    <SearchBox searchChange={this.onsearchchange}/>\r\n                    <Scroll>  \r\n                        <ErrorBoundary>   \r\n                        <CardList robots={filteredRobots} />\r\n                        </ErrorBoundary>\r\n                    </Scroll>\r\n                    </div>  \r\n                ); \r\n            }\r\n    }\r\n};\r\n\r\n// const App=()=>{\r\n//     return (\r\n//         <div className='tc'>\r\n//             <h1>ROBOFRIENDS</h1>\r\n//             <SearchBox />\r\n//             <CardList robots={robots} />\r\n//         </div>\r\n        \r\n//     );\r\n// };\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n// import CardList from './CardList';\n// import Card from './Card';\n// import {robots} from './robots';\nimport 'tachyons';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}